{"_queryType":"Query","_mutationType":null,"_subscriptionType":null,"_directives":[{"name":"skip","description":"Directs the executor to skip this field or fragment when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Skipped when true.","type":"Boolean!"}]},{"name":"include","description":"Directs the executor to include this field or fragment only when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Included when true.","type":"Boolean!"}]},{"name":"cost","description":"The cost directives is used to express the complexity of a field.","locations":["FIELD_DEFINITION"],"args":[{"name":"complexity","description":"Defines the complexity of the field.","type":"Int!","defaultValue":1},{"name":"multipliers","description":"Defines field arguments that act as complexity multipliers.","type":"[MultiplierPath!]"}]},{"name":"deprecated","description":"The @deprecated directive is used within the type system definition language to indicate deprecated portions of a GraphQL serviceâ€™s schema,such as deprecated fields on a type or deprecated enum values.","locations":["FIELD_DEFINITION","ENUM_VALUE"],"args":[{"name":"reason","description":"Deprecations include a reason for why it is deprecated, which is formatted using Markdown syntax (as specified by CommonMark).","type":"String","defaultValue":"No longer supported"}]}],"astNode":null,"_typeMap":{"Query":"Query","Int":"Int","EstudianteFilter":"EstudianteFilter","Boolean":"Boolean","String":"String","Estudiante":"Estudiante","__Schema":"__Schema","__Type":"__Type","__TypeKind":"__TypeKind","__Field":"__Field","__InputValue":"__InputValue","__EnumValue":"__EnumValue","__Directive":"__Directive","__DirectiveLocation":"__DirectiveLocation","MultiplierPath":"MultiplierPath"},"_implementations":{}}